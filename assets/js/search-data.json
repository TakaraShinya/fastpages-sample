{
  
    
        "post0": {
            "title": "Fastpages Notebook でブログを書いてみた",
            "content": "My Tweetcards . &#26368;&#36817;&#12398;Tweet . 梅雨になったからか、階段にカタツムリ🐌いた👀ハイビスカス🌺の花を食べてるっぽかったんですが、花なんか食べるんだっけな⁉️🤔#カタツムリ#ハイビスカス🌺 #花食べるの #午後には晴れた☀️ https://t.co/5rguPEMz6H pic.twitter.com/FLGHpb0QP6 . &mdash; 高良家@CA ADvance, Inc 沖縄🏖WEBエンジニア❤️BBQ🍖 (@takarake) May 15, 2022 . print(&quot;test timer&quot;) . test timer . !which aws !aws s3 -h . /usr/local/bin/aws usage: aws [-h] [--profile PROFILE] [--debug] optional arguments: -h, --help show this help message and exit --profile PROFILE --debug . %pip install boto3 %pip install pandas . Requirement already satisfied: boto3 in /opt/conda/lib/python3.10/site-packages (1.24.10) Requirement already satisfied: s3transfer&lt;0.7.0,&gt;=0.6.0 in /opt/conda/lib/python3.10/site-packages (from boto3) (0.6.0) Requirement already satisfied: botocore&lt;1.28.0,&gt;=1.27.10 in /opt/conda/lib/python3.10/site-packages (from boto3) (1.27.10) Requirement already satisfied: jmespath&lt;2.0.0,&gt;=0.7.1 in /opt/conda/lib/python3.10/site-packages (from boto3) (1.0.0) Requirement already satisfied: python-dateutil&lt;3.0.0,&gt;=2.1 in /opt/conda/lib/python3.10/site-packages (from botocore&lt;1.28.0,&gt;=1.27.10-&gt;boto3) (2.8.2) Requirement already satisfied: urllib3&lt;1.27,&gt;=1.25.4 in /opt/conda/lib/python3.10/site-packages (from botocore&lt;1.28.0,&gt;=1.27.10-&gt;boto3) (1.26.9) Requirement already satisfied: six&gt;=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil&lt;3.0.0,&gt;=2.1-&gt;botocore&lt;1.28.0,&gt;=1.27.10-&gt;boto3) (1.16.0) Note: you may need to restart the kernel to use updated packages. Requirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (1.4.2) Requirement already satisfied: numpy&gt;=1.21.0 in /opt/conda/lib/python3.10/site-packages (from pandas) (1.22.4) Requirement already satisfied: python-dateutil&gt;=2.8.1 in /opt/conda/lib/python3.10/site-packages (from pandas) (2.8.2) Requirement already satisfied: pytz&gt;=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas) (2022.1) Requirement already satisfied: six&gt;=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil&gt;=2.8.1-&gt;pandas) (1.16.0) Note: you may need to restart the kernel to use updated packages. . import os import boto3 import pandas as pd os.environ[&#39;AWS_DEFAULT_REGION&#39;] = &#39;ap-northeast-1&#39; client = boto3.client(&#39;iam&#39;) client.list_users() ec2_client = boto3.client(&#39;ec2&#39;) vpcs = ec2_client.describe_vpcs()[&#39;Vpcs&#39;] . data = [] for vpc in vpcs: # Name タグの取得 tags_filter = [t.get(&#39;Value&#39;) for t in vpc[&#39;Tags&#39;] if t.get(&#39;Key&#39;) == &quot;Name&quot;] name = tags_filter[0] if tags_filter else &#39;&#39; # Cidr 取得と buffer 格納 for assoc in vpc[&#39;CidrBlockAssociationSet&#39;]: data.append([ name, vpc[&#39;VpcId&#39;], assoc[&#39;CidrBlock&#39;], vpc[&#39;InstanceTenancy&#39;], vpc[&#39;IsDefault&#39;] ]) # data.append([ # vpc[&#39;InstanceTenancy&#39;], # vpc[&#39;IsDefault&#39;] # ]) . df_vpcs = pd.DataFrame(data, columns=[&quot;Name&quot;, &quot;VpcId&quot;, &quot;Cidr&quot;, &quot;Tenancy&quot;, &quot;IsDefault&quot;]) # df_vpcs = pd.DataFrame(data, columns=[&quot;Tenancy&quot;, &quot;IsDefault&quot;]) . df_vpcs . Name VpcId Cidr Tenancy IsDefault . 0 dev-caad-direct-connect-vpc | vpc-49a7112e | 10.141.180.0/22 | default | False | . 1 dev-bastille-vpc | vpc-e5d5868c | 10.30.0.0/16 | default | False | . rtbs = ec2_client.describe_route_tables()[&#39;RouteTables&#39;] . df_rtbs = pd.DataFrame(rtbs, columns=[&quot;VpcId&quot;, &quot;RouteTableId&quot;, &quot;SubnetId&quot;, &quot;Tags&quot;]) # df_rtbs = pd.DataFrame(rtbs, columns=[&quot;SubnetId&quot;]) . df_rtbs # rtbs . VpcId RouteTableId SubnetId Tags . 0 vpc-e5d5868c | rtb-f8d58691 | NaN | [{&#39;Key&#39;: &#39;Name&#39;, &#39;Value&#39;: &#39;dev-bastille-pub-rt... | . 1 vpc-49a7112e | rtb-0640b12c29386d9bc | NaN | [{&#39;Key&#39;: &#39;Name&#39;, &#39;Value&#39;: &#39;dev-caad-direct-con... | . 2 vpc-49a7112e | rtb-d5fec1b2 | NaN | [{&#39;Key&#39;: &#39;Name&#39;, &#39;Value&#39;: &#39;dev-caad-direct-con... | . 3 vpc-e5d5868c | rtb-e6d5868f | NaN | [{&#39;Key&#39;: &#39;Name&#39;, &#39;Value&#39;: &#39;dev-bastille-prv-rt... | . 4 vpc-e5d5868c | rtb-7de8f81f | NaN | [{&#39;Key&#39;: &#39;Name&#39;, &#39;Value&#39;: &#39;dev-bastille-prv-rt... | . client = boto3.client(&#39;ec2&#39;) running_instances = client.describe_instances( Filters=[ { &#39;Name&#39;: &#39;instance-state-name&#39;, &#39;Values&#39;: [&#39;running&#39;] } ] ) . # dataframe_instances = running_instances[&#39;Reservations&#39;] # dataframe_instances[0][&#39;Instances&#39;][0][&#39;InstanceId&#39;] # df_instances = pd.DataFrame(dataframe_instances, columns=[&quot;InstanceId&quot;, &quot;InstanceType&quot;, &quot;PrivateIpAddress&quot;, &quot;LaunchTime&quot;, &quot;Tags&quot;]) # df_instances !which aws !aws s3 ls . /usr/local/bin/aws 2020-08-05 08:14:09 39dabo-tfstate 2021-05-28 15:00:10 amazon-connect-ac2d21e3332c 2021-07-14 15:00:09 amazon-connect-b98550397449 2021-07-20 02:42:20 amazon-connect-d24c0e650a34 2022-02-22 03:04:57 amazon-connect-eb56dc1d3228 2020-10-29 05:49:47 amplify-amplify-sns-workshop-production-144938-deployment 2021-03-17 08:30:11 amplify-next-app-20210317173002-deployment 2021-03-17 08:46:55 amplify-next-takara-20210317174647-deployment 2021-03-17 09:26:40 amplifyappkengo-20210317182426-hostingbucket-dev 2021-03-17 09:15:22 amplifyappmiyazato-20210317181424-hostingbucket-dev 2021-03-17 09:10:51 amplifytakaranextapp-20210317181040-deployment 2021-03-17 09:28:51 amplifytakaranextapp-20210317182843-deployment 2021-03-17 10:33:24 amplifytakaranextapp-20210317193218-hostingbucket-dev 2020-06-18 17:53:37 aws-20190408101533-deployment 2020-06-18 17:53:37 aws-20190408121357-deployment 2019-10-23 03:21:17 aws-athena-query-results-ap-northeast-1-880785016310 2021-07-08 00:30:02 aws-cloudtrail-logs-880785016310-43e06201 2021-07-29 15:00:06 aws-sam-cli-managed-default-samclisourcebucket-18v8bujhgau1e 2020-06-12 17:29:26 backup-bastilledev-ap-southeast-1 2019-11-22 05:37:09 c003 2020-10-14 15:00:06 cdktoolkit-stagingbucket-1p8ysnz7b0hai 2020-06-18 19:19:32 cf-templates-qouv3vfo2do3-ap-northeast-1 2021-02-22 10:52:32 chapix 2020-06-18 20:04:06 connect-950c185ae65f 2020-06-18 20:13:31 cs-dev-bastille 2021-05-18 09:13:43 cxplus-amazonconnect 2022-03-28 05:18:45 cxplus-google-analytics 2019-11-18 09:32:16 dev-bas-csv-migration-error-c003 2020-06-18 20:32:59 dev-bas-csv-migration-error-test-yamato 2019-11-18 10:45:07 dev-bas-csv-migration-success-c003 2020-06-18 20:32:59 dev-bas-csv-migration-success-test-yamato 2020-03-10 02:51:38 dev-bas-customer-account 2020-06-18 20:32:59 dev-bas-escalation 2020-02-26 09:34:48 dev-bas-ikusa-sync-userinfo 2020-06-18 20:32:59 dev-bas-reward-error 2020-06-18 20:32:59 dev-bas-reward-evidence 2020-06-18 20:32:59 dev-bas-reward-send 2020-06-18 20:32:59 dev-bas-reward-success 2022-06-07 08:01:06 dev-bas-template 2020-06-18 20:32:59 dev-bas-ticket 2020-06-18 20:32:59 dev-bas-ticket-new 2019-11-21 12:28:53 dev-bastille-tfstate 2020-06-18 20:35:54 dev-labastille-escalation 2020-06-18 20:35:54 dev-labastille-escalation-follow 2020-06-18 20:35:54 dev-labastille-follow 2020-06-18 20:35:54 dev-labastille-logs 2020-06-18 20:35:54 dev-labastille-send-mail 2020-06-18 20:35:54 dev-labastille-ticket 2020-06-18 20:35:54 dev-labastille-ticket-follow 2020-06-18 20:35:54 dev-labastille-tmp 2020-06-18 20:36:51 dev-ml-queue 2020-06-19 17:59:37 devsyncchat-20190417072526-deployment 2020-06-19 18:11:25 dsg.bastilledev.com 2020-06-19 18:42:06 elasticbeanstalk-ap-northeast-1-880785016310 2020-06-19 18:53:15 est-bastille-dev2 2021-06-17 03:15:22 line-bot-lambda-sample 2021-06-22 00:34:40 logs-alb-prd-corp-wp 2021-05-28 15:00:09 miyazato-chat-demo 2021-09-29 06:37:38 odev-0929-bastille-api-d-serverlessdeploymentbuck-12morn7936t7n 2021-11-04 02:16:39 odev-1104-bastille-api-d-serverlessdeploymentbuck-pjpf3k6ikeu7 2021-10-05 01:35:36 odev1005-bastille-api-de-serverlessdeploymentbuck-gh2d8w5ynky7 2021-10-22 01:44:44 odev1022-bastille-api-de-serverlessdeploymentbuck-1trrfpc8fppl0 2021-10-25 02:51:26 odev1023-bastille-api-de-serverlessdeploymentbuck-295lgf2ng6s5 2021-09-27 08:16:00 oshiro-dev-0927-bastille-serverlessdeploymentbuck-lep2qgelst1p 2020-07-24 15:16:39 prd-corp-wp-content 2020-02-12 09:48:15 prd-wp-old 2019-11-21 12:13:18 prod-bastille-tfstate 2021-11-08 08:27:01 qna-dev-dev-bootstrap-1-bucket-jma6g9cicv4 2021-11-08 11:35:26 qna-dev-dev-master-1-exportbucket-1xxintg1k6jnw 2020-06-27 21:40:48 receive-mail-bastilledev.com 2020-01-21 02:22:04 seach-synonym 2022-05-11 03:35:38 stackset-app-autify-infr-pipelinebuiltartifactbuc-15bny4oi94l13 2021-11-30 15:00:09 stackset-cxplus-front-ap-pipelinebuiltartifactbuc-1h3dkv9qe3m71 2021-03-31 15:00:09 stackset-demo-app-infras-pipelinebuiltartifactbuc-1i45d8839pg7p 2021-03-30 15:00:10 stackset-demo-app-infras-pipelinebuiltartifactbuc-ijl5bgl2i9yr 2019-11-12 04:21:04 stg-corp-wp-content 2021-12-20 01:30:26 takaesu-es-backup 2021-11-08 08:28:08 takara-qnabot-exportbucket-50pza0p99hsx 2020-06-20 00:53:51 tdev0210-maintenance 2021-04-06 06:16:06 tdev0406-webapp-logs 2020-06-20 00:56:26 template-dev-labastille 2020-06-20 00:56:26 template-development-bastille 2019-11-15 04:26:16 test-import-csv 2019-07-19 10:12:08 test-tine-to-bastille-pipeline-bucket 2020-06-20 01:05:34 test-yamato 2020-06-20 01:10:57 testvuechat-20190418111916-deployment 2020-07-24 15:14:11 tmp-prd-corp-wp-content 2020-06-20 01:51:46 vue-todo-list-20190417220854-deployment 2020-06-20 01:51:46 vue-todo-list-20190418100948-deployment 2020-06-20 01:51:46 vue-todo-list-20190418104132-deployment 2020-06-20 01:51:49 vuegraphqlchatsource-20190418140702-deployment .",
            "url": "https://takarashinya.github.io/fastpages-sample/jupyter/2022/05/18/first.html",
            "relUrl": "/jupyter/2022/05/18/first.html",
            "date": " • May 18, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://takarashinya.github.io/fastpages-sample/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://takarashinya.github.io/fastpages-sample/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://takarashinya.github.io/fastpages-sample/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://takarashinya.github.io/fastpages-sample/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}